{
    "swagger": "2.0",
    "info": {
        "description": "Service for managing goods with caching and event logging.",
        "title": "Goods Service API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/goods/create": {
            "post": {
                "description": "Create a new good with the provided data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "goods"
                ],
                "summary": "Create a new good",
                "parameters": [
                    {
                        "description": "Good data",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.GoodCreate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Good"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/goods/delete/{id}": {
            "delete": {
                "description": "Mark a good as deleted by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "goods"
                ],
                "summary": "Delete a good",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Good ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/goods/get/{id}": {
            "get": {
                "description": "Get a good by its ID with Redis caching",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "goods"
                ],
                "summary": "Get a good by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Good ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Good"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/goods/list": {
            "get": {
                "description": "Get list of goods with pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "goods"
                ],
                "summary": "List goods",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit number of records (default: 10)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset for pagination (default: 0)",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/goods/reprioritize": {
            "patch": {
                "description": "Change priority of a good and update priorities of subsequent goods",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "goods"
                ],
                "summary": "Reprioritize a good",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Good ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Project ID",
                        "name": "projectId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "New priority",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ReprioritizeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ReprioritizeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/goods/update/{id}": {
            "patch": {
                "description": "Update a good by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "goods"
                ],
                "summary": "Update a good",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Good ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Good update data",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.GoodUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Good"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.ErrorResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "details": {},
                "message": {
                    "type": "string"
                }
            }
        },
        "models.Good": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                },
                "project_id": {
                    "type": "integer"
                },
                "removed": {
                    "type": "boolean"
                }
            }
        },
        "models.GoodCreate": {
            "type": "object",
            "required": [
                "name",
                "project_id"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "project_id": {
                    "type": "integer"
                }
            }
        },
        "models.GoodUpdate": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.ListMeta": {
            "type": "object",
            "properties": {
                "limit": {
                    "description": "какое ограничение стоит на вывод объектов",
                    "type": "integer"
                },
                "offset": {
                    "description": "от какой позиции выводить данные в списке",
                    "type": "integer"
                },
                "removed": {
                    "description": "сколько записей со статусом removed = true",
                    "type": "integer"
                },
                "total": {
                    "description": "сколько всего записей",
                    "type": "integer"
                }
            }
        },
        "models.ListResponse": {
            "type": "object",
            "properties": {
                "goods": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Good"
                    }
                },
                "meta": {
                    "$ref": "#/definitions/models.ListMeta"
                }
            }
        },
        "models.PriorityInfo": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "priority": {
                    "type": "integer"
                }
            }
        },
        "models.ReprioritizeRequest": {
            "type": "object",
            "required": [
                "newPriority"
            ],
            "properties": {
                "newPriority": {
                    "type": "integer"
                }
            }
        },
        "models.ReprioritizeResponse": {
            "type": "object",
            "properties": {
                "priorities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.PriorityInfo"
                    }
                }
            }
        }
    }
}